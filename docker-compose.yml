version: "3.9"

services:
  web:
    build: .
    command: python run.py
    volumes:
      - .:/app
    ports:
      - "5000:5000"
    environment:
      DATABASE_URL: ${DATABASE_URL}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
    depends_on:
      - db
      - redis
    restart: unless-stopped

  celery:
    build: .
    command: celery -A app.make_celery.celery_app worker --loglevel=info
    volumes:
      - .:/app
    environment:
      DATABASE_URL: ${DATABASE_URL}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
    depends_on:
      - web
      - redis
      - db
    restart: unless-stopped

  celery-beat:
    build: .
    command: celery -A app.make_celery.celery_app beat --loglevel=info
    volumes:
      - .:/app
    environment:
      DATABASE_URL: ${DATABASE_URL}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
    depends_on:
      - celery
      - db
      - redis
    restart: unless-stopped

  migrate:
    build: .
    command: flask --app run.py db upgrade
    volumes:
      - .:/app
    environment:
      DATABASE_URL: ${DATABASE_URL}
      EMAIL_USERNAME: ${EMAIL_USERNAME}
      EMAIL_PASSWORD: ${EMAIL_PASSWORD}
      SECRET_KEY: ${SECRET_KEY}
    depends_on:
      - db
    restart: "no"

  db:
    image: postgres:15
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - pgdata:/var/lib/postgresql/data

  redis:
    image: redis:7
    ports:
      - "6379:6379"

volumes:
  pgdata:
